#!/usr/bin/env bash
# -*- coding: utf-8 -*-

set -e

DOTFILES_LOCATION="${USER_DOTFILES_LOCATION:-$HOME/src/git/dparo/dotfiles}"

_invoke_dotbot() {
	DOTFILES_LOCATION="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
	cd "$DOTFILES_LOCATION" || exit 1

	DOTBOT_LOCATION="$DOTFILES_LOCATION/meta/dotbot"
	DOTBOT_BIN="$DOTBOT_LOCATION/bin/dotbot"

	# Update dot-files repo while avoiding merge conflicts
	update_dotbot_submodule() {
		git -C "$DOTBOT_LOCATION" submodule sync --quiet --recursive
		git submodule update --init --recursive --remote "$DOTBOT_LOCATION"
	}

	git pull --ff-only
	source "$HOME/.config/bash/bash_profile"
	source "$HOME/.config/bash/bashrc"

	update_dotbot_submodule || true

	## Populate user HOME directory with these dotfiles using dotbot
	"$DOTBOT_BIN" --exit-on-failure -d "$DOTFILES_LOCATION" -c "$DOTFILES_LOCATION/meta/configs/link.yaml" "$@"
	dotbot_result=$?
	if [ "$dotbot_result" -ne 0 ]; then
		echo "Dotbot failed with exit status $dotbot_result"
		return "$dotbot_result"
	fi

	source "$HOME/.config/bash/bash_profile"
	source "$HOME/.config/bash/bashrc"

	## Populate user HOME directory with these dotfiles using dotbot
	"$DOTBOT_BIN" --exit-on-failure -d "$DOTFILES_LOCATION" -c "$DOTFILES_LOCATION/meta/configs/post_link.yaml" "$@"
	dotbot_result=$?
	if [ "$dotbot_result" -ne 0 ]; then
		echo "Dotbot failed with exit status $dotbot_result"
		return "$dotbot_result"
	fi
}

_bootstrap_fedora_setup_dnf_conf() {
	# Setup DNF configuration
	cat <<'EOF' | sudo tee /etc/dnf/dnf.conf
# see `man dnf.conf` for defaults and possible options

[main]
gpgcheck=True
installonly_limit=3
clean_requirements_on_remove=True
best=False
skip_if_unavailable=True
deltarpm=True
fastestmirror=True
max_parallel_downloads=10
defaultyes=True
EOF
}

_bootstrap_fedora_install_rpmfusion_repos() {
	sudo dnf install -y \
		https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-"$(rpm -E %fedora)".noarch.rpm \
		https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-"$(rpm -E %fedora)".noarch.rpm
	sudo dnf update -y

}

_bootstrap_fedora_install_proprietary_codecs_rpmfusion() {
	sudo dnf groupupdate -y multimedia --setop="install_weak_deps=False" --exclude=PackageKit-gstreamer-plugin
	sudo dnf groupupdate -y sound-and-video
}

_bootstrap_fedora_maybe_install_nvidia_drivers() {
	# Install NVIDIA drivers if possible and desired by the user

	if lspci -k | grep -A 2 -E "(VGA|3D)" | grep -Ei "NVIDIA.*(GeForce|Quadro|Tesla|GTX|RTX)"; then
		if ! dnf list installed akmod-nvidia 1>/dev/null 2>/dev/null; then
			read -r -p "NVIDIA Card detected. Do you want to install NVIDIA proprietary drivers from RPMfusion (akmod-nvidia package)? [yN] " yn
			case $yn in
			yes | y)
				sudo dnf install -y akmod-nvidia
				;;
			no | n) ;;
			*) ;;
			esac
		fi
		if ! dnf list installed xorg-x11-drv-nvidia-cuda 1>/dev/null 2>/dev/null; then
			read -r -p "NVIDIA Card detected. Do you want to install (optional) CUDA drivers from RPMfusion (xorg-x11-drv-nvidia-cuda package)? [yN] " yn
			case $yn in
			yes | y)
				sudo dnf install -y xorg-x11-drv-nvidia-cuda # optional for cuda/nvdec/nvenc support
				;;
			no | n) ;;
			*) ;;
			esac
		fi
	fi

}

_bootstrap_prep_necessary_pkgs() {
	if [ -x /usr/bin/dnf ]; then
		# Core/Fundamental packages
		sudo dnf install -y util-linux-user python3-pyyaml p7zip p7zip-plugins sqlite
		sudo dnf install -y make cmake gcc g++ clang clang-tools-extra pip
		sudo dnf install -y nodejs npm tree-sitter-cli

		# Core command line tools
		sudo dnf install -y xclip xsel ripgrep the_silver_searcher fd-find exa bat neovim tmux NetworkManager-tui

		# Desktop stuff
		sudo dnf install -y i3 i3lock kitty feh nitrogen sxiv rofi dunst mpd mpc ncmpcpp copyq picom brightnessctl
		sudo dnf install -y bspwm sxhkd polybar xsetroot xset xinput xss-lock xsecurelock xsettingsd zathura zathura-pdf-poppler
        sudo dnf install -y nomacs qimgv

		sudo dnf remove -y 'libreoffice*'
		sudo dnf group remove -y libreoffice

		# Setup DNF configuration
		_bootstrap_fedora_setup_dnf_conf

		# Enable RPM fusion free and non-free repositories
		_bootstrap_fedora_install_rpmfusion_repos

		# Install Additional proprietary codecs
		_bootstrap_fedora_install_proprietary_codecs_rpmfusion

		# Install NVIDIA drivers if possible and desired by the user
		_bootstrap_fedora_query_for_installing_nvidia_drivers

		# Enable Flathub repo for installing flatpaks
		flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
	fi
}

_bootstrap_post_dotfiles_linked() {
	true
}

_bootstrap_dotfiles_repo() {
	if ! type git 1>/dev/null 2>/dev/null; then
		sudo dnf install -y git || sudo apt install -y git || sudo pacman -Syy git
	fi

	_bootstrap_prep_necessary_pkgs

	set -x

	if [ ! -d "$DOTFILES_LOCATION" ]; then
		mkdir -p "$(dirname "$DOTFILES_LOCATION")"
		git clone --depth 1 "https://github.com/dparo/dotfiles" "$DOTFILES_LOCATION"
	fi

	cd "$DOTFILES_LOCATION" || exit 1
	if [ "$USER" = "dparo" ]; then
		git remote set-url origin "git@github.com:dparo/dotfiles.git"
	fi

	set +x

	if ./install "$@"; then
		_bootstrap_post_dotfiles_linked
	fi
}

main() {
	if test "$1" = "--bootstrap-dotfiles-repo"; then
		shift 1
		_bootstrap_dotfiles_repo "$@"
		return "$?"
	else
		_invoke_dotbot "$@"
		return "$?"
	fi
}

main "$@"
