- defaults:
    link:
      create: true
      relink: true
      glob: false
      force: false
    shell:
      quiet: true
      stdout: true
      stderr: true
    clean:
      force: false

- description: Install core packages
  command: |
    # List of additional commands that didn't make it:
    # - coz-profiler: https://github.com/plasma-umass/coz
    # - valgrind + kcachegrind
    # - gperf
    # - texlive-* and related minimal packages (including latexmk)
    # - doxygen
    # - flamegraph (cargo)   profiling tool
    # - hyperfine (cargo)    benchmarking tool


    # Noemutt and lazygit are not available in the official repos,
    # but in semi-official copr repos
    sudo dnf copr enable -y flatcap/neomutt
    sudo dnf copr enable -y atim/lazygit

    sudo dnf install -y git-crypt

    sudo dnf install -y git gcc clang cmake ninja-build \
    sqlite python3-pip p7zip p7zip-plugins \
    clang-tools-extra cppcheck bear editorconfig \
    hotspot heaptrack \
    net-tools lm_sensors \
    nodejs npm golang \
    zsh tmux trash-cli xsel xclip ranger exa bat git-delta fd-find neovim tokei htop unrar curl jq ripgrep the_silver_searcher entr httpie rsync lazygit \
    qemu docker \
    neomutt isync msmtp \
    rxvt-unicode kitty \
    i3 i3lock i3status xsettingsd xss-lock brightnessctl wmctrl dunst picom arandr pavucontrol seahorse \
    polybar bspwm sxhkd \
    feh nitrogen nomacs qimgv scrot maim flameshot  \
    mpv yt-dlp zathura zathura-pdf-poppler mpd mpc ncmpcpp  \
    copyq gparted gimp qt5ct \
    solaar blueman bluez-tools

- description: Install RUSTUP (rust + cargo)
  stdout: false
  stderr: false
  command: |
    if [ ! -d "${CARGO_HOME:-$HOME/.cargo}/bin"]; then
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
    fi

- description: Setup GOOGLE dns servers
  command: |
    # Clear immutable flag
    chattr -i /etc/resolv.conf

    cat <<'EOF' | sudo tee /etc/resolv.conf
    # Google Nameservers
    nameserver 8.8.8.8
    nameserver 8.8.4.4
    nameserver 2001:4860:4860::8888
    # NOTE: the libc resolver may not support more than 3 nameservers.
    # The nameservers listed below may not be recognized.
    nameserver 2001:4860:4860::8844
    EOF

    # Set immutable flag. Prevent Network manager to overwrite this file
    chattr +i /etc/resolv.conf

    sudo mkdir -p /etc/NetworkManager/conf.d/
    cat <<'EOF' | sudo tee /etc/NetworkManager/conf.d/dns-servers.conf
    [global-dns-domain-*]
    servers=8.8.8.8,8.8.4.4,2001:4860:4860::8888,2001:4860:4860::8844
    EOF

- description: Setup mutually exclusive ethernet/wifi, automatically disable wifi when ethernet cable is plugged in
  command: |
    cat <<'EOF' | sudo tee /etc/NetworkManager/dispatcher.d/70-wifi-wired-exclusive.sh
    #!/bin/bash
    export LC_ALL=C

    toggle_wifi ()
    {
       result=$(nmcli dev | grep "ethernet" | grep -w "connected")
       if [ -n "$result" ]; then
           nmcli radio wifi off
       else
           nmcli radio wifi on
       fi
    }

    if [ "$2" = "up" ]; then
       toggle_wifi
    fi

    if [ "$2" = "down" ]; then
       toggle_wifi
    fi
    EOF
    sudo chmod a+rx /etc/NetworkManager/dispatcher.d/70-wifi-wired-exclusive.sh

- description: Setup ZSH as the default USER shell
  command: |
    if [ -f "/bin/zsh" ]; then
        echo "Setting /bin/zsh as the default shell"
        sudo usermod --shell /bin/zsh "$USER"
    elif [ -f "/usr/bin/zsh" ]; then
        echo "Setting /usr/bin/zsh as the default shell"
        sudo usermod --shell /usr/bin/zsh "$USER"
    fi

- description: Setup additional USER groups
  command: |
    # Append user to the video group: Allows for brightnessctl to change
    # the monitor brightness
    sudo usermod -aG video,input "$USER"

- description: Setup docker user group
  command: |
    sudo groupadd docker
    sudo usermod -aG docker "$USER"

- description: Disable GDM display manager
  command: |
    sudo systemctl disable gdm gdm3

- description: Allow display managers to list and exec user xinitrc file
  command: |
    cat <<'EOF' | sudo tee /usr/local/bin/xinitrcsession-run
    #!/bin/bash

    if [ -f "$HOME/.config/bash/bash_profile" ]; then
      source "$HOME/.config/bash/bash_profile"
    else
      source "$HOME/.bash_profile"
    fi

    entry=""
    if [ -n "$XINITRC" ]; then
        entry="$XINITRC"
    elif [ -f "$XDG_CONFIG_HOME/X11/xinitrc" ]; then
        entry="$XDG_CONFIG_HOME/X11/xinitrc"
    elif [ -f "$HOME/.config/X11/xinitrc" ]; then
        entry="$HOME/.config/X11/xinitrc"
    elif [ -f "$HOME/.xinitrc" ]; then
        entry="$HOME/.xinitrc"
    fi
    if [ -n "$entry" ]; then
        exec "$entry"
    fi
    EOF

    sudo chmod 0775 /usr/local/bin/xinitrcsession-run

    cat <<'EOF' | sudo tee /usr/share/xsessions/xinitrc.desktop
    [Desktop Entry]
    Name=xinitrc
    Comment=Executes the .xinitrc script in your home directory
    Exec=xinitrcsession-run
    TryExec=xinitrcsession-run
    Type=Application
    EOF

    sudo chmod 0664 /usr/share/xsessions/xinitrc.desktop

- description: Unlock GNOME keyring on login
  command: |
    cat <<'EOF' | sudo tee /etc/pam.d/common-unlock-gnome-keyring
    auth       optional     pam_gnome_keyring.so
    session    optional     pam_gnome_keyring.so auto_start
    EOF

    cat <<'EOF' | sudo tee -a /etc/pam.d/login
    @include common-unlock-gnome-keyring
    EOF

- description: Install required fonts
  command: |
    source "${USER_DOTFILES_LOCATION:-./}/meta/lib.sh"
    install_all_fonts

- description: Install additional software
  command: |
    if [ ! -f "$HOME/.dropbox-dist/dropboxd" ]; then
        pushd "$HOME"
        wget -O - "https://www.dropbox.com/download?plat=lnx.x86_64" | tar xzf -
        popd
    fi

    curl -fsSL https://deno.land/x/install/install.sh | sh

    flatpak install -y flathub com.jgraph.drawio.desktop
    flatpak install -y flathub md.obsidian.Obsidian

- description: Block snapd from autoupgrading packages
  command: snap refresh --hold
